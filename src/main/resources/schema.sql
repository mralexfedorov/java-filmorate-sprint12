drop table if exists film_likes;
drop table if exists user_friends;
drop table if exists users;
drop table if exists film_genres;
drop table if exists films;
drop table if exists genres;
drop table if exists mpa;

create table if not exists users (
  user_id int generated by default as identity primary key,
  email varchar(255) not null,
  login varchar(255) not null,
  name varchar(255),
  birthday date not null
);

create table if not exists user_friends (
  user_id int references users (user_id) on delete cascade,
  friend_id int references users (user_id) on delete cascade,
  primary key (user_id, friend_id)
);

create table if not exists genres (
  id int primary key,
  name varchar(255)
);

create table if not exists mpa (
  id varchar(255) primary key,
  name varchar(255),
  description varchar(255),
  primary key (id)
);

create table if not exists films (
  film_id int generated by default as identity primary key,
  name varchar(255) not null,
  description varchar(255) not null,
  release_date date not null,
  duration int not null,
  rate int not null,
  mpa_id int references mpa (id) on delete cascade
);

create table if not exists film_genres (
  film_id int references films (film_id) on delete cascade,
  genre_id int references genres (id) on delete cascade,
  primary key (film_id, genre_id)
);

create table if not exists film_likes (
  film_id int references films (film_id) on delete cascade,
  user_id int references users (user_id) on delete cascade,
  primary key (film_id, user_id)
);

insert into mpa (id, name, description)
values
    (1, 'G', 'General audiences'),
    (2, 'PG', 'Parental guidance suggested'),
    (3, 'PG-13', 'Parents strongly cautioned'),
    (4, 'R', 'Restricted'),
    (5, 'NC-17', 'Clearly adult');

insert into genres (id, name)
values
    (1, 'Комедия'),
    (2, 'Драма'),
    (3, 'Мультфильм'),
    (4, 'Триллер'),
    (5, 'Документальный'),
    (6, 'Боевик');
